# Generated by Django 3.2 on 2023-03-19 20:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=200, null=True)),
                ('firstname', models.CharField(max_length=200, null=True)),
                ('Lastname', models.CharField(max_length=200, null=True)),
                ('Address', models.CharField(max_length=200, null=True)),
                ('Phonenumber', models.CharField(max_length=200, null=True)),
                ('email', models.CharField(max_length=200, null=True)),
                ('profile_pic', models.ImageField(blank=True, default='profile_pic.PNG', null=True, upload_to='')),
                ('total_balance', models.FloatField(default=0, null=True)),
                ('usdt', models.FloatField(default=0, null=True)),
                ('btc', models.FloatField(default=0, null=True)),
                ('eth', models.FloatField(default=0, null=True)),
                ('dodge', models.FloatField(default=0, null=True)),
                ('trx', models.FloatField(default=0, null=True)),
                ('axs', models.FloatField(default=0, null=True)),
                ('floki', models.FloatField(default=0, null=True)),
                ('busd', models.FloatField(default=0, null=True)),
                ('dash', models.FloatField(default=0, null=True)),
                ('etc', models.FloatField(default=0, null=True)),
                ('xmr', models.FloatField(default=0, null=True)),
                ('bnbbsc', models.FloatField(default=0, null=True)),
                ('shib', models.FloatField(default=0, null=True)),
                ('bch', models.FloatField(default=0, null=True)),
                ('xrp', models.FloatField(default=0, null=True)),
                ('sol', models.FloatField(default=0, null=True)),
                ('ltc', models.FloatField(default=0, null=True)),
                ('dot', models.FloatField(default=0, null=True)),
                ('xlm', models.FloatField(default=0, null=True)),
                ('ada', models.FloatField(default=0, null=True)),
                ('elm', models.FloatField(default=0, null=True)),
                ('pyn', models.FloatField(default=0, null=True)),
                ('rdn', models.FloatField(default=0, null=True)),
                ('ttm', models.FloatField(default=0, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Token_price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('element_price', models.FloatField(blank=True, null=True)),
                ('polygon_price', models.FloatField(blank=True, null=True)),
                ('radon_price', models.FloatField(blank=True, null=True)),
                ('tetim_price', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('element', models.FloatField(blank=True, null=True)),
                ('polygon', models.FloatField(blank=True, null=True)),
                ('radon', models.FloatField(blank=True, null=True)),
                ('tetim', models.FloatField(blank=True, null=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='walletapp.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Payment_id',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.CharField(max_length=200, null=True)),
                ('price_amount', models.CharField(max_length=200, null=True)),
                ('price_currency', models.CharField(max_length=200, null=True)),
                ('commodity', models.CharField(max_length=200, null=True)),
                ('transaction_status', models.CharField(choices=[('Successful', 'Successful'), ('Failed', 'Failed'), ('Pending', 'Pending')], default='Pending', max_length=200, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='walletapp.customer')),
            ],
        ),
    ]
